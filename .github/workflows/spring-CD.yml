name : spring-CD

on:
  push:
    branches: [ main ]


env:
  S3_BUCKET_NAME: spring-test-buckett
  PROJECT_NAME: CI-CD-Test


jobs:
  deploy:
    name: CD
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run : chmod +x gradlew
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRETS_ACCESS_KEY }} 
        aws-region: ap-northeast-2
        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
      
    
    # 전송할 파일을 담을 디렉토리 생성
    - name : Make Directory for deliver
      run : mkdir deploy
      
     
    # Jar 파일을 Copy
    - name : Copy Jar
      run : cp ./build/libs/*.jar ./deploy/
        
      
      
    # appspec.yml Copy
    - name: Copy appspec
      run: cp appspec.yml ./deploy/
        
       
       
    # zip 파일로 압축하기
    - name: Create ZIP file
      run: zip -r ./springboot-intro-build.zip ./deploy



    # s3 버킷으로 copy
    - name : Copy to AWS s3 bucket
      run : |
        aws s3 cp --region ap-northeast-2 --acl private ./springboot-intro-build.zip s3://spring-test-buckett/
     
     
    
    # Deploy 부분
    - name: Deploy
      env:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRETS_ACCESS_KEY }} 
        
      run: |
         aws deploy create-deployment \
         --application-name springboot-intro \
         --deployment-group-name springboot-intro-deploy-group \
         --file-exists-behavior OVERWRITE \
         --s3-location bucket=spring-test-buckett,bundleType=zip,key=springboot-intro-build.zip \
         --region ap-northeast-2  
